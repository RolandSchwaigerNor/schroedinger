*&---------------------------------------------------------------------*
*& Report ZSCH_06_SAND_UHR
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zsch_06_sand_uhr.
* Der Taktgeber
DATA: gr_gui_timer TYPE REF TO cl_gui_timer."*1
* Klasse für die Timer-Reaktion
CLASS lcl_event_handler DEFINITION. "*2
  PUBLIC SECTION.
* Falls der Timer sich meldet, reagieren wir darauf
    CLASS-METHODS: on_finished FOR EVENT finished
                  OF cl_gui_timer
      IMPORTING sender.
ENDCLASS.
* Da kommt die Implementierung
CLASS lcl_event_handler IMPLEMENTATION."*3
  METHOD on_finished.
    STATICS: ld_kruemel TYPE i."*4
    ADD 1 TO ld_kruemel."*5
* Lauf Pferdchen, lauf weiter
    IF ld_kruemel < 10."*6
      WRITE: '.'.
      sender->run( )."*7
* Brrrr, es ist vorbei
    ELSE.
      sender->cancel( )."*8
      WRITE: 'Fertig!'.
    ENDIF.
  ENDMETHOD.
ENDCLASS.

START-OF-SELECTION.
* Den Timer erzeugen
  CREATE OBJECT gr_gui_timer."*9
* Wer reagiert womit auf den Timer?
  SET HANDLER lcl_event_handler=>on_finished
  FOR gr_gui_timer."*10
* Setze das Intervall auf eine Sekunde
  gr_gui_timer->interval = 1."*11
* Lauf Pferdchen, lauf
  gr_gui_timer->run( )."*12
* Sanduhr starten
  WRITE / 'Sanduhr läuft: '.
